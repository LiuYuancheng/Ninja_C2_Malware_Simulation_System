#!/usr/bin/python
#-----------------------------------------------------------------------------
# Name:        c2AppAPITest.py [python3]
#
# Purpose:     This module is the test case program used to test the C2API.
#  
# Author:      Yuancheng Liu
#
# Created:     2024/05/23
# version:     v0.2.2
# Copyright:   Copyright (c) 2022 LiuYuancheng
# License:     MIT License
#-----------------------------------------------------------------------------

import os
import sys

print("Current working directory is : %s" % os.getcwd())
dirpath = os.path.dirname(os.path.abspath(__file__))
print("Current source code location : %s" % dirpath)
APP_NAME = ('c2APItest', 'testCase')

TOPDIR = 'src'
LIBDIR = 'lib'


idx = dirpath.find(TOPDIR)
gTopDir = dirpath[:idx + len(TOPDIR)] if idx != -1 else dirpath   # found it - truncate right after TOPDIR
# Config the lib folder 
gLibDir = os.path.join(gTopDir, LIBDIR)
if os.path.exists(gLibDir): sys.path.insert(0, gLibDir)

import requests
import c2Constants
import c2Client

#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------

ownID = 'API_Test_Program'
c2IP  = ('127.0.0.1', 5000)
httpsFlg = False
c2Client = c2Client.c2Client(ownID, c2IP[0], c2Port=c2IP[1], downloadDir=dirpath, httpsFlg=httpsFlg)
print("Connected to C2")

#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
def testcase1():
    print("Test case 1: Download file via c2Client API Function")
    fileName = 'picctureTestDownload.png'
    filePath = os.path.join(dirpath, fileName)
    print("Downloading file %s" % filePath)
    c2Client.downloadfile(fileName, fileDir=dirpath)
    rst = 'Pass' if os.path.exists(filePath) else 'failed'
    print("- test result : %s" % rst)

#-----------------------------------------------------------------------------
def testcase2():
    print("Test case 2: Download file via http request")
    jsonDict = {"filename": 'readme.pdf'}
    getUrl = "http://%s:%s/filedownload" % (c2IP[0], c2IP[1])
    res = requests.get(getUrl, json=jsonDict, allow_redirects=True, verify=False) # set allow redirect to by pass load balancer
    filePath = os.path.join(dirpath, 'readme.pdf')
    if res.ok:
        with open(filePath, 'wb') as fh:
            fh.write(res.content)
    rst = 'Pass' if os.path.exists(filePath) else 'failed'
    print("- test result : %s" % rst)

#-----------------------------------------------------------------------------
def testcase3():
    print("Test case 3: Upload file to C2 via c2Client API")
    fileName = 'update_installer.zip'
    filePath = os.path.join(dirpath, fileName)
    rst = c2Client.uploadfile(filePath)
    rst = 'Pass' if os.path.exists(filePath) else 'failed'
    print("- test result : %s" % rst)

#-----------------------------------------------------------------------------
def testcase4():
    print("Test case 4: Download file via http request")
    fileName = 'update_installer.zip'
    filePath = os.path.join(dirpath, fileName)
    rst = False
    with open(filePath, 'rb') as fh:
        postUrl = "http://%s:%s/fileupload" % (c2IP[0], c2IP[1])
        rst = requests.post(postUrl, files={'file': (fileName, fh.read())}, verify=False)
    rst = 'Pass' if os.path.exists(filePath) else 'failed'
    print("- test result : %s" % rst)
    

#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
def main():
    terminate = False
    while not terminate:
        print("-------------------------------------------------------------")
        print("0. exist test program")
        print("1. Download file via c2Client API")
        print("2: Download file via http request")
        print("3. Upload file to C2 via c2Client API")
        print("4. Upload file to C2 via http request")
        selection = int(input("Enter your selection:"))
        
        if selection == 1:
            testcase1()
        elif selection == 2:
            testcase2()
        elif selection == 3:
            testcase3()
        elif selection == 4:
            testcase4()

        else:
            terminate = True

    c2Client.stop()


#-----------------------------------------------------------------------------
if __name__ == '__main__':
    main()

